<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0U3OZABIklSw6CZnMgAkSSpYdJMzGQCSJBUsusmZDABJkgoW3eRMBoAkSQWLbnImA0CSpIJFNzmTASBJ
        UsGim5zJAJAkqWDRTc5kAEiSVLDoJmcyACRJKlh0kzMZAJIkFSy6yZkMAEmSChbd5EwGgCRJBYtuciYD
        QJKkgkU3OZMBIElSwaKbnMkAkCSpYNFNzmQASJJUsOgmZzIAJEkqWHSTMxkAkiQVLLrJmQwASZIKFt3k
        TAaAJEkFi25yJgNAkqSCRTc5kwEgSVLBopucyQCQJKlg0U3OZABIklSw6CZnMgAkSSpYdJMzGQCSJBUs
        usmZDABJkgoW3eRMBoAkSQWLbnImA0CSpIJFNzmTASBJUsGim5zJAJAkqWDRTc5kAEiSVLDoJmcyACRJ
        Klh0kzMZAJIkFSy6yZkMAEmSChbd5EwGgCRJBYtuciYDQJKkgkU3OZMBIElSwaKbnMkAkCSpYNFNzmQA
        SJJUsOgmZzIAJEkqWHSTMxkAkiQVLLrJmQwASZIKFt3kTAaAJEkFi25yJgNAkqSCRTc5kwEgSVLBopuc
        yQCQJKlg0U3OZABIklSw6CZnMgAkSSpYdJMzGQCSJBUsusmZDABJkgoW3eRMBoAkSQWLbnImA0CSpIJF
        NzmTASBJUsGim5zJAJAkqWDRTc5kAEiSVLDoJmcyACRJKlh0kzMZAJIkFSy6yZkMAEmSChbd5EybHgBf
        u/9RSZI046KbnGnTAwAAmL3oJmcyAACgoOgmZzIAAKCg6CZnMgAAoKDoJmcyAACgoOgmZzIAAKCg6CZn
        MgAAoKDoJmcyAACgoOgmZzIAAKCg6CZnMgAAoKDoJmcyAACgoOgmZzIAAKCg6CZnMgAAoKDoJmcyAACg
        oOgmZzIAAKCg6CZnMgAAoKDoJmcyAACgoOgmZzIAAKCg6CZnMgAAoKDoJmcyAACgoOgmZzIAAKCg6CZn
        MgAAoKDoJmcyAACgoOgmZzIAAKCg6CZnMgAAoKDoJmcyAACgoOgmZzIAAKCg6CZnMgAAoKDoJmcyAACg
        oOgmZzIAAKCg6CZnMgAAoKDoJmcyAACgoOgmZzIAAKCg6CZnMgAAoKDoJmcyAACgoOgmZzIAAKCg6CZn
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="progress.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>